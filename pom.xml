<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cui</groupId>
    <artifactId>base-util</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <lombok.version>1.18.8</lombok.version>
        <slf4j.version>1.7.30</slf4j.version>
        <spring.version>5.1.7.RELEASE</spring.version>
        <fastjson.version>1.2.33</fastjson.version>
        <mail.version>1.6.2</mail.version>
        <snakeyaml.version>1.23</snakeyaml.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 提供通用代码 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!--通用工具依赖包-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.8.1</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!--fastjson依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!--java邮件收发-->
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${mail.version}</version>
            </dependency>
            <!--yaml解析-->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>

            <!-- guava 工具 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>30.1.1-jre</version>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!--  springboot整合 redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>2.1.5.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
    </dependencies>

    <distributionManagement>
        <repository>
            <id>maven.repo</id>
            <name>Local Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- 发布插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <!-- 配置本地打包后的本地仓库存储地址，后续上传jar包会从此仓库中去取 -->
                    <altDeploymentRepository>maven.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--&lt;!&ndash; Deploy the web site &ndash;&gt;-->
                <!--<groupId>com.github.github</groupId>-->
                <!--<artifactId>site-maven-plugin</artifactId>-->
                <!--<version>0.12</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>site</goal>-->
                        <!--</goals>-->
                        <!--&lt;!&ndash; select the Maven phase in which the plugin will be executed &ndash;&gt;-->
                        <!--<phase>deploy</phase>-->
                        <!--<configuration>-->
                            <!--&lt;!&ndash; Plugin configuration goes here &ndash;&gt;-->
                            <!--<server>github</server>-->
                            <!--&lt;!&ndash; The commit message &ndash;&gt;-->
                            <!--<message>Maven artifacts for ${project.artifactId}-${project.version}</message>-->
                            <!--&lt;!&ndash; The location where the site is uploaded &ndash;&gt;-->
                            <!--<repositoryName>maven-repository</repositoryName> &lt;!&ndash; github repo name &ndash;&gt;-->
                            <!--&lt;!&ndash;-->
					  <!--github的用户名，注意不是登录的用户名，此项需要登录后，进入https://github.com/settings/profile页面配置Name属性，-->
					  <!--否则会报-->
					  <!--[ERROR] Failed to execute goal com.github.github:site-maven-plugin:0.12:site-->
					  <!--(default) on project rfcore: Error creating commit: Invalid request.-->
					  <!--[ERROR] For 'properties/name', nil is not a string.-->
					  <!--[ERROR] For 'properties/name', nil is not a string. (422)-->
					  <!--[ERROR] -> [Help 1]-->
					  <!--的错误-->
					<!--&ndash;&gt;-->
                            <!--<repositoryOwner>cuiswing</repositoryOwner> &lt;!&ndash; organization or user name  &ndash;&gt;-->
                            <!--&lt;!&ndash; Use merge or override the content &ndash;&gt;-->
                            <!--<merge>true</merge>-->
                            <!--&lt;!&ndash;指定要上传的分支, refs/heads 这个不变，后面的分支名可选，-->
                            <!--可以采取一个jar包使用一个分支的策略。-->
		                    <!--若多个jar包同时发布在同一个分支的话，会覆盖。。。。&ndash;&gt;-->
                            <!--<branch>refs/heads/base-util</branch>-->
                            <!--&lt;!&ndash; 指定从哪里去取打好的包，并上传至github &ndash;&gt;-->
                            <!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>-->
                            <!--&lt;!&ndash; 包含outputDirectory标签内填的文件夹中的所有内容 &ndash;&gt;-->
                            <!--&lt;!&ndash;                        <includes>&ndash;&gt;-->
                            <!--&lt;!&ndash;                            <include>**/*</include>&ndash;&gt;-->
                            <!--&lt;!&ndash;                        </includes>&ndash;&gt;-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

        </plugins>
    </build>

</project>